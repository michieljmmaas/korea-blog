name: Update Content and Deploy

on:
  push:
    branches:
      - main  # Adjust to your default branch if different
  
  # Allow manual triggering from the GitHub UI
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: choice
        options:
        - production
        - preview

permissions:
  contents: write

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest
    # Only run if commit message contains '[deploy]' or if manually triggered
    if: contains(github.event.head_commit.message, '[deploy]') || github.event_name == 'workflow_dispatch'
    
    env:
      IMAGEKIT_URL_ENDPOINT: ${{ secrets.IMAGEKIT_URL_ENDPOINT }}
      IMAGE_KIT_PRIVATE_KEY: ${{ secrets.IMAGE_KIT_PRIVATE_KEY }}
      IMAGE_KIT_PUBLIC_KEY: ${{ secrets.IMAGE_KIT_PUBLIC_KEY }}
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      # Static content update steps
      - name: Generate thumbnails
        id: static-generate-thumbnails
        continue-on-error: false
        run: npm run thumbnails

      - name: Update stats
        id: static-update-stats
        continue-on-error: false
        run: npm run extract-stats

      - name: Commit updated thumbnails and charts
        if: steps.static-generate-thumbnails.outcome == 'success' && steps.static-update-stats.outcome == 'success'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Update thumbnails and/or chart data'

      # Deploy steps
      - name: Deploy to Vercel
        if: steps.static-generate-thumbnails.outcome == 'success' && steps.static-update-stats.outcome == 'success'
        run: |
          npm install -g vercel
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.environment }}" == "preview" ]]; then
            vercel --yes --token ${{ secrets.VERCEL_TOKEN }}
          else
            vercel --prod --yes --token ${{ secrets.VERCEL_TOKEN }}
          fi

      - name: Log deployment status
        if: steps.static-generate-thumbnails.outcome == 'success' && steps.static-update-stats.outcome == 'success'
        run: |
          echo "Deployment completed successfully"
          echo "Deployed commit: ${{ github.sha }}"